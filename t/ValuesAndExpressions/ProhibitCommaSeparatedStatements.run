## name Basic passing
## failures 0
## cut

@x = (@y, @z);
my $expl = [133, 138];
$lookup = { a => 1, b => 2 };

#-----------------------------------------------------------------------------

## name Basic failure
## failures 1
## cut

@x = @y, @z;

#-----------------------------------------------------------------------------

## name List including assignments
## failures 0
## cut

@w = ($x = 1, $y = 2, $z = 3);

#-----------------------------------------------------------------------------

## name List containing statement
## failures 0
## cut

@w = ( {}, [] );

#-----------------------------------------------------------------------------

## name List containing statement in a constructor that is reported as a block
## failures 0
## cut

my %foo = (
    blah => {
        blah => 'blah',
    },
);

#-----------------------------------------------------------------------------

## name Regular statement inside a block.
## failures 1
## cut

foreach my $path ( @ARGV ) {
    say 'Looking at ', $path, '.';
}

#-----------------------------------------------------------------------------

## name Sub call after comma
## failures 1
## cut

@x = @y, foo @z;

#-----------------------------------------------------------------------------

## name Regular sub call before comma
## failures 1
## cut

@x = foo(@y), @z;

#-----------------------------------------------------------------------------

## name No-argument sub call via use of sigil
## failures 1
## cut

@x = &foo, @y, bar @z;

#-----------------------------------------------------------------------------

## name Two sub calls
## failures 1
## cut

@x = foo @y, bar @z;

#-----------------------------------------------------------------------------

## name Built-in call that provides a list context
## failures 0
## cut

@x = push @y, @z;

#-----------------------------------------------------------------------------

## name Built-in call that provides a list context, called like a function
## failures 1
## cut

@x = push (@y), @z;

#-----------------------------------------------------------------------------

## name Built-in call that takes multiple arguments without parentheses
## failures 0
## cut

$x = substr $y, 1, 2;

#-----------------------------------------------------------------------------

## name Built-in call that takes multiple arguments without parentheses, called like a function
## failures 1
## cut

$x = substr ($y, 1), 2;

#-----------------------------------------------------------------------------

## name Call to unary built-in
## failures 1
## cut

@x = sin @y, @z;

#-----------------------------------------------------------------------------

## name For loop
## failures 2
## cut

for ($x = 0, $y = 0; $x < 10; $x++, $y += 2) {
    foo($x, $y);
}

#-----------------------------------------------------------------------------

##############################################################################
#      $URL$
#     $Date$
#   $Author$
# $Revision$
##############################################################################

# Local Variables:
#   mode: cperl
#   cperl-indent-level: 4
#   fill-column: 78
#   indent-tabs-mode: nil
#   c-indentation-style: bsd
# End:
# ex: set ts=8 sts=4 sw=4 tw=78 ft=perl expandtab :
